{"version":3,"sources":["components/PostsList/PostsList.jsx","api/api.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["PostsList","select","posts","showPostInfo","postSelected","list","filter","post","userId","className","map","key","id","title","type","value","onClick","getUserPosts","options","fetch","then","promise","json","result","data","NewCommentForm","postId","loadComments","useState","name","changeName","email","changeEmail","body","changeBody","onSubmit","event","preventDefault","method","JSON","stringify","addComment","onChange","target","placeholder","PostDetails","comments","commentsShow","hideComments","length","comment","commentId","defaultProps","App","changeSelect","users","createUsers","setPosts","setComments","changePostId","createList","a","loadUsers","useEffect","selectedPost","find","commentsFromSelectedPosts","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa505ae7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './PostsList.scss';\n\nexport const PostsList = ({ select, posts, showPostInfo, postSelected }) => {\n  let list = posts;\n\n  if (select !== '0') {\n    list = posts.filter(post => post.userId === +select);\n  }\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {list.map(post => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>\n                [User #\n                {post.userId}\n                ]:\n              </b>\n              {post.title}\n            </div>\n            <button\n              type=\"button\"\n              value={post.id}\n              className=\"PostsList__button button\"\n              onClick={showPostInfo}\n            >\n              {+postSelected === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  select: PropTypes.string.isRequired,\n  showPostInfo: PropTypes.func.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  postSelected: PropTypes.string.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const getUserPosts = (userId, options) => (\n  fetch(`${BASE_URL}/${userId}`, options)\n    .then(promise => promise.json())\n    .then(result => result.data)\n);\n\nexport const deleteComment = commentId => (\n  getUserPosts(`comments/${commentId}`, {\n    method: 'DELETE',\n  }));\n\nexport const addComment = (name, email, body, postId) => (\n  getUserPosts(`comments`, {\n    method: 'POST',\n    body: JSON.stringify({\n      name,\n      email,\n      body,\n      postId,\n    }),\n  }));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { addComment } from '../../api/api';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, loadComments }) => {\n  const [name, changeName] = useState('');\n  const [email, changeEmail] = useState('');\n  const [body, changeBody] = useState('');\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(event) => {\n        event.preventDefault();\n        addComment(name, email, body, postId)\n          .then(loadComments);\n        changeName('');\n        changeEmail('');\n        changeBody('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={event => changeName(event.target.value)}\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          value={email}\n          onChange={event => changeEmail(event.target.value)}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={body}\n          onChange={event => changeBody(event.target.value)}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.string.isRequired,\n  loadComments: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { NewCommentForm } from '../NewCommentForm';\nimport { deleteComment } from '../../api/api';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ title, postId, comments, loadComments }) => {\n  const [commentsShow, hideComments] = useState(true);\n\n  return (\n    <div className=\"PostDetails\">\n      {postId !== '' ? (\n        <>\n          <h2>Post details:</h2>\n\n          <section className=\"PostDetails__post\">\n            <p>\n              {title}\n            </p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => hideComments(!commentsShow)}\n            >\n              {`${commentsShow ? 'Hide' : 'Show'} ${comments.length} comments`}\n            </button>\n\n            {commentsShow && (\n              <ul className=\"PostDetails__list\">\n                {comments.map(comment => (\n                  <li\n                    key={comment.id}\n                    className=\"PostDetails__list-item\"\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => deleteComment(comment.id)\n                        .then(loadComments)\n                      }\n                      value={comment.id}\n                    >\n                      X\n                    </button>\n                    <p>\n                      {comment.body}\n                    </p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                postId={postId}\n                loadComments={loadComments}\n              />\n            </div>\n          </section>\n        </>\n      ) : (\n        <h2>Please select a post in left column!!!</h2>\n      )}\n    </div>\n  );\n};\n\nPostDetails.defaultProps = {\n  title: '',\n};\n\nPostDetails.propTypes = {\n  title: PropTypes.string,\n  postId: PropTypes.string.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  loadComments: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/api';\n\nconst App = () => {\n  const [select, changeSelect] = useState('0');\n\n  const [users, createUsers] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n\n  const [postId, changePostId] = useState('');\n\n  const createList = async() => {\n    setPosts(await getUserPosts('posts'));\n  };\n\n  const loadUsers = async() => {\n    createUsers(await getUserPosts('users'));\n  };\n\n  const loadComments = async() => {\n    setComments(await getUserPosts('comments'));\n  };\n\n  useEffect(() => {\n    loadUsers();\n    createList();\n    loadComments();\n  }, []);\n\n  const showPostInfo = (event) => {\n    if (event.target.value === postId) {\n      changePostId('');\n    } else {\n      changePostId(event.target.value);\n    }\n  };\n\n  const selectedPost = posts.find(post => post.id === +postId);\n  const commentsFromSelectedPosts = comments\n    .filter(comment => comment.postId === +postId);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={select}\n            onChange={event => changeSelect(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            select={select}\n            posts={posts}\n            showPostInfo={showPostInfo}\n            postSelected={postId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <PostDetails\n            postId={postId}\n            {...selectedPost}\n            comments={commentsFromSelectedPosts}\n            loadComments={loadComments}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}